name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ollama-monitoring-stack

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_all.txt
        pip install pytest black flake8

    - name: Lint with flake8
      run: |
        # Stop on syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Format check with black
      run: black --check .

    - name: Run tests
      run: |
        python -m pytest test_ollama_monitoring.py -v

  build-container:
    name: Build Container Image
    runs-on: ubuntu-latest
    needs: lint-and-test
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Podman
      run: |
        sudo apt-get update
        sudo apt-get install -y podman

    - name: Log in to Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | podman login ghcr.io -u $ --password-stdin

    - name: Extract metadata
      id: meta
      run: |
        echo "VERSION=$(cat VERSION)" >> $GITHUB_OUTPUT
        echo "TAGS=ghcr.io/${{ github.repository }}/monitoring-proxy:latest" >> $GITHUB_OUTPUT
        if [[ $GITHUB_REF == refs/tags/v* ]]; then
          echo "TAGS=ghcr.io/${{ github.repository }}/monitoring-proxy:$(cat VERSION),ghcr.io/${{ github.repository }}/monitoring-proxy:latest" >> $GITHUB_OUTPUT
        fi

    - name: Build container image
      run: |
        podman build -t ${{ env.REGISTRY }}/${{ github.repository }}/monitoring-proxy:${{ steps.meta.outputs.VERSION }} .
        podman tag ${{ env.REGISTRY }}/${{ github.repository }}/monitoring-proxy:${{ steps.meta.outputs.VERSION }} ${{ env.REGISTRY }}/${{ github.repository }}/monitoring-proxy:latest

    - name: Push container image
      if: github.event_name != 'pull_request'
      run: |
        podman push ${{ env.REGISTRY }}/${{ github.repository }}/monitoring-proxy:${{ steps.meta.outputs.VERSION }}
        podman push ${{ env.REGISTRY }}/${{ github.repository }}/monitoring-proxy:latest

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [lint-and-test, build-container]
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        body: |
          ## What's New in ${{ github.ref }}
          
          ### üöÄ Features
          - Comprehensive Ollama monitoring with real-time dashboard
          - Mac M-Series optimized performance
          - Automated installation and setup
          
          ### üì¶ Container Images
          - `ghcr.io/${{ github.repository }}/monitoring-proxy:${{ github.ref_name }}`
          - `ghcr.io/${{ github.repository }}/monitoring-proxy:latest`
          
          ### üõ†Ô∏è Quick Start
          ```bash
          curl -fsSL https://raw.githubusercontent.com/${{ github.repository }}/main/install.sh | bash
          ```
          
          Or with Podman:
          ```bash
          podman run -d --name ollama-monitor \
            -p 3001:3001 -p 8001:8001 \
            ghcr.io/${{ github.repository }}/monitoring-proxy:${{ github.ref_name }}
          ```